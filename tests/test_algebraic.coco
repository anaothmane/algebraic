from pytest import fixture, raises
import algebraic as al
import seaborn as sns
import pandas as pd
import numpy as np

@fixture
def numeric_df() =
  pd.DataFrame(np.random.random((5,10)))

@fixture
def numeric_d2(numeric_df) =
  al.D2.from_df(numeric_df, al.Question)

@fixture
def nonnumeric_d2(numeric_df) =
  al.D2.from_df(numeric_df.astype(str), al.Question)


def test_creation_of_feature(question, col):
  assert isinstance(question, al.D1)
  assert isinstance(question, al.Feature)
  assert np.all(question.series == col)

def test_correct_df(flights, d2):
  assert np.all(flights == d2.df)

class TestValidWith:
  def test_valid_with_all_numeric(self,numeric_d2):
    assert (numeric_d2.d1s |> map$(.is_numeric) |> list |> all)

  def test_valid_with_all_nonnumeric(self, nonnumeric_d2):
    assert not (nonnumeric_d2.d1s |> map$(.is_numeric) |> list |> any)
