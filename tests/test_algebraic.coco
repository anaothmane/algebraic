from pytest import fixture
import algebraic as al
import seaborn as sns
import pandas as pd
import numpy as np

data Question(series) from al.Feature:
  @al.computation
  def spanned(self) =
    min_, max_ = self.series.min(), self.series.max()
    (self.series - max_)/(min_-max_)

  @al.computation
  def centered(self) =
    mean_ = self.spanned.mean()
    (self.series - mean_)


@fixture
def flights() =
  from os.path import dirname, join
  (dirname(__file__) `join` 'flights.csv') |> pd.read_csv

#@fixture
#def d2(flights) = flights |> al.D2

@fixture(params=(flights().iterrows() |> map$(-> _[1])))
def row(request) = request.param

@fixture(params=(flights().transpose().iterrows()|>map$(-> _[1])))
def col(request) = request.param

@fixture
def obs(row) = al.Observation(row)

@fixture
def question(col) =
  Question(col)

def test_creation_of_feature(question, col):
  assert isinstance(question, al.D1)
  assert isinstance(question, al.Feature)
  assert np.all(question.series == col)
